package dao;

import java.util.ArrayList;
import java.util.Date;
import java.util.HashMap;

import utils.odbcUtils;
import model.CarCar;
import model.PhoPhoto;
import model.SecUser;
import model.User;

/**
 * 
 * @author wf
 *
 */
public class PhoImpl {
	public PhoPhoto selectPhoto(String id) {
		PhoPhoto phoPhoto = null;
		String sql = "SELECT a.*,b.* FROM dt_photo a LEFT JOIN dt_goods b ON a.goods_id = b.goods_id WHERE b.goods_id=?";
		ArrayList<HashMap<String, Object>> list1 = odbcUtils.executeQuery(sql,
				new Object[] { id });
		odbcUtils.close();
		if (list1.size() > 0) {
			phoPhoto = new PhoPhoto();
			HashMap map = list1.get(0);
			phoPhoto.setGoodsimg1(String.valueOf(map.get("goodsimg1")));
			phoPhoto.setGoodsimg2(String.valueOf(map.get("goodsimg2")));
			phoPhoto.setGoodsimg3(String.valueOf(map.get("goodsimg3")));
			phoPhoto.setGoodsimg4(String.valueOf(map.get("goodsimg4")));
			phoPhoto.setGoodsname(String.valueOf(map.get("goodsname")));
			phoPhoto.setGoodprice(String.valueOf(map.get("goodsprice")));
			phoPhoto.setGoodinfo(String.valueOf(map.get("goodsinfo")));
			phoPhoto.setGoodid(String.valueOf(map.get("goods_id")));
		}
		return phoPhoto;
	}

	public int addCar(CarCar car) {
		String sql = "insert into dt_shopping_car(user_id,goods_id,state,carcount,carprice) values(?,?,?,?,?)";
		int i = odbcUtils.executeUpdate(sql, new Object[] { car.getUserid(),
				car.getGoodid(), 0, car.getCount(), car.getCarmoney() });
		return i;
	}

	public CarCar[] selectcar(String id) {
		CarCar car[] = null;
		String sql = "select a.*,b.* from dt_shopping_car a left JOIN dt_goods b on a.goods_id = b.goods_id where a.user_id=?";
		ArrayList<HashMap<String, Object>> list1 = odbcUtils.executeQuery(sql,
				new Object[] { id });
		odbcUtils.close();
		if (list1.size() > 0) {
			car = new CarCar[list1.size()];
			for (int i = 0; i < list1.size(); i++) {
				HashMap map = list1.get(i);
				car[i] = new CarCar(String.valueOf(map.get("user_id")),
						String.valueOf(map.get("goodid")), String.valueOf(map
								.get("carcount")), String.valueOf(map
								.get("carprice")), String.valueOf(map
								.get("goodsname")), String.valueOf(map
								.get("goodsprice")), String.valueOf(map
								.get("goodsimg")), String.valueOf(map
								.get("car_id")));
			}
		}
		return car;
	}
	
	public CarCar[] selectcar1(String id) {
		CarCar car[] = null;
		String sql = "select a.*,b.* from dt_shopping_car a left JOIN dt_goods b on a.goods_id = b.goods_id where a.user_id=? and a.state=0";
		ArrayList<HashMap<String, Object>> list1 = odbcUtils.executeQuery(sql,
				new Object[] { id });
		odbcUtils.close();
		if (list1.size() > 0) {
			car = new CarCar[list1.size()];
			for (int i = 0; i < list1.size(); i++) {
				HashMap map = list1.get(i);
				car[i] = new CarCar(String.valueOf(map.get("user_id")),
						String.valueOf(map.get("goodid")), String.valueOf(map
								.get("carcount")), String.valueOf(map
								.get("carprice")), String.valueOf(map
								.get("goodsname")), String.valueOf(map
								.get("goodsprice")), String.valueOf(map
								.get("goodsimg")), String.valueOf(map
								.get("car_id")));
			}
		}
		return car;
	}
	
	

	public String[] selCar(String[] id) {
		String isHave[] = new String[2];
		String sql = "select * from dt_shopping_car where goods_id = ? and user_id=?";
		ArrayList<HashMap<String, Object>> list = odbcUtils.executeQuery(sql,
				new Object[] { id[0], id[1] });
		if (list.size() > 0) {
			HashMap map = list.get(0);
			isHave[0] = String.valueOf(map.get("carcount"));
			isHave[1] = String.valueOf(map.get("goods_id"));
		}
		return isHave;
	}

	public int updateCar(CarCar car) {
		String sql = "update dt_shopping_car SET carcount=?,carprice=? where goods_id=?";
		int i = odbcUtils.executeUpdate(
				sql,
				new Object[] { car.getCount(), car.getCarmoney(),
						car.getGoodid() });
		return i;
	}

	public String getString(String id) {
		String moneyString = null;
		String sql = "SELECT sum(carprice) s FROM dt_shopping_car WHERE user_id =? and state=0";
		ArrayList<HashMap<String, Object>> list = odbcUtils.executeQuery(sql,
				new Object[] { id });
		if (list.size() > 0) {
			HashMap map = list.get(0);
			moneyString = String.valueOf(map.get("s"));
		}
		return moneyString;
	}
	public String getString1(String id) {
		String moneyString = null;
		String sql = "SELECT sum(carcount) s FROM dt_shopping_car WHERE user_id =? and state=0";
		ArrayList<HashMap<String, Object>> list = odbcUtils.executeQuery(sql,
				new Object[] { id });
		if (list.size() > 0) {
			HashMap map = list.get(0);
			moneyString = String.valueOf(map.get("s"));
		}
		return moneyString;
	}
	
	public int delCar(String id){
		String sql="delete from dt_shopping_car where car_id=?";
		int i=  odbcUtils.executeUpdate(sql, new Object[]{id});
		return i;
	}
	
	public int address(String id,SecUser secUser) {
		String sql = "insert into dt_address(userid,rec_pho,rec_name,address) values(?,?,?,?)";
		
		int i = odbcUtils.executeUpdate(sql, new Object[] { id,secUser.getPho(),secUser.getName(),secUser.getAddress()});
		return i;
	}
	
	public String  getaddress(String id){
		String addid = null;
		String sql1 = "select * from dt_address where  userid=?";
		ArrayList<HashMap<String, Object>> list = odbcUtils.executeQuery(sql1,
				new Object[] {id});
		if (list.size()>0) {
			HashMap map = list.get(0);
			addid = String.valueOf(map.get("address_id"));
		}
		return addid;
	}
	
	public int addorder(String user_id,String add_id,String orderprice,String sum) {
		String sql = "insert into dt_goods_order(user_id,address_id,orderprice,state,payment,orderdate,orderstate,carcount) values(?,?,?,?,?,?,?,?)";
		int i = odbcUtils.executeUpdate(sql, new Object[] {user_id,add_id,orderprice,0,"易支付",String.valueOf(new Date()),0,sum});
		return i;
	}
	public String  getsummon(String id){
		String addid = null;
		String sql1 = "select * from dt_goods_order where  user_id=?";
		ArrayList<HashMap<String, Object>> list = odbcUtils.executeQuery(sql1,
				new Object[] {id});
		if (list.size()>0) {
			HashMap map = list.get(0);
			addid = String.valueOf(map.get("orderprice"));
		}
		return addid;
	}
}
